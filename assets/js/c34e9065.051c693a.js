"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[2320],{2046:(e,t,o)=>{o.r(t),o.d(t,{assets:()=>c,contentTitle:()=>l,default:()=>h,frontMatter:()=>s,metadata:()=>r,toc:()=>a});var n=o(4848),i=o(8453);const s={title:"TomoText Class in Tomo.PDF",description:"Learn how to use the TomoText class in the Tomo.PDF library to add text elements to your PDF documents.",keywords:["Tomo.PDF","PDF creation","TomoText","text elements","PDF library",".NET PDF","PDF document"],author:"Tomo Files",date:new Date("2024-05-31T00:00:00.000Z")},l="TomoText Class in Tomo.PDF",r={id:"tomotext",title:"TomoText Class in Tomo.PDF",description:"Learn how to use the TomoText class in the Tomo.PDF library to add text elements to your PDF documents.",source:"@site/docs/tomotext.md",sourceDirName:".",slug:"/tomotext",permalink:"/Tomo.Pdf.Doc/tomotext",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{title:"TomoText Class in Tomo.PDF",description:"Learn how to use the TomoText class in the Tomo.PDF library to add text elements to your PDF documents.",keywords:["Tomo.PDF","PDF creation","TomoText","text elements","PDF library",".NET PDF","PDF document"],author:"Tomo Files",date:"2024-05-31T00:00:00.000Z"},sidebar:"docs",previous:{title:"Creating a PDF with Shapes using Tomo.PDF",permalink:"/Tomo.Pdf.Doc/create-pdf-with-shapes"}},c={},a=[{value:"Introduction",id:"introduction",level:2},{value:"Class Definition",id:"class-definition",level:2},{value:"Properties",id:"properties",level:2},{value:"Constructor",id:"constructor",level:2},{value:"Parameters",id:"parameters",level:3},{value:"Example Usage",id:"example-usage",level:2}];function d(e){const t={code:"code",h1:"h1",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",ul:"ul",...(0,i.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.h1,{id:"tomotext-class-in-tomopdf",children:"TomoText Class in Tomo.PDF"}),"\n",(0,n.jsx)(t.h2,{id:"introduction",children:"Introduction"}),"\n",(0,n.jsxs)(t.p,{children:["The ",(0,n.jsx)(t.code,{children:"TomoText"})," class in the Tomo.PDF library allows you to add text elements to your PDF documents. This class provides various properties to customize the text, including position, font, size, and color."]}),"\n",(0,n.jsx)(t.h2,{id:"class-definition",children:"Class Definition"}),"\n",(0,n.jsxs)(t.p,{children:["Here is the definition of the ",(0,n.jsx)(t.code,{children:"TomoText"})," class:"]}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-csharp",children:"namespace Tomo.Core\n{\n    public class TomoText : ITomoDocumentElement\n    {\n        public string Text { get; }\n        public float X { get; }\n        public float Y { get; }\n        public string? FontPath { get; }\n        public string? FontName { get; }\n        public float TextSize { get; }\n        public TomoColor Color { get; }\n\n        public TomoText(string text, float x, float y, string? fontPath = null, string? fontName = null, float textSize = 24, TomoColor? color = null)\n        {\n            Text = text;\n            X = x;\n            Y = y;\n            FontPath = fontPath;\n            FontName = fontName;\n            TextSize = textSize;\n            Color = color ?? new TomoColor(0, 0, 0);\n        }\n    }\n}\n"})}),"\n",(0,n.jsx)(t.h2,{id:"properties",children:"Properties"}),"\n",(0,n.jsxs)(t.ul,{children:["\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.code,{children:"Text"})," (string): The text content to be displayed."]}),"\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.code,{children:"X"})," (float): The X-coordinate of the text position."]}),"\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.code,{children:"Y"})," (float): The Y-coordinate of the text position."]}),"\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.code,{children:"FontPath"})," (string?, optional): The file path to a custom font."]}),"\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.code,{children:"FontName"})," (string?, optional): The name of the font."]}),"\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.code,{children:"TextSize"})," (float): The size of the text. Default is 24."]}),"\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.code,{children:"Color"})," (TomoColor): The color of the text. Default is black."]}),"\n"]}),"\n",(0,n.jsx)(t.h2,{id:"constructor",children:"Constructor"}),"\n",(0,n.jsxs)(t.p,{children:["The ",(0,n.jsx)(t.code,{children:"TomoText"})," constructor allows you to initialize a new text element with various customization options:"]}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-csharp",children:"public TomoText(string text, float x, float y, string? fontPath = null, string? fontName = null, float textSize = 24, TomoColor? color = null)\n"})}),"\n",(0,n.jsx)(t.h3,{id:"parameters",children:"Parameters"}),"\n",(0,n.jsxs)(t.ul,{children:["\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.code,{children:"text"})," (string): The text content to be displayed."]}),"\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.code,{children:"x"})," (float): The X-coordinate of the text position."]}),"\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.code,{children:"y"})," (float): The Y-coordinate of the text position."]}),"\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.code,{children:"fontPath"})," (string?, optional): The file path to a custom font."]}),"\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.code,{children:"fontName"})," (string?, optional): The name of the font."]}),"\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.code,{children:"textSize"})," (float, optional): The size of the text. Default is 24."]}),"\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.code,{children:"color"})," (TomoColor?, optional): The color of the text. Default is black."]}),"\n"]}),"\n",(0,n.jsx)(t.h2,{id:"example-usage",children:"Example Usage"}),"\n",(0,n.jsxs)(t.p,{children:["Here is an example of how to use the ",(0,n.jsx)(t.code,{children:"TomoText"})," class to add text to a PDF document:"]}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-csharp",children:'var builder = new TomoPdfBuilder();\nvar textElement = new TomoText("Hello, PDF World!", 100, 150, textSize: 18, color: new TomoColor(255, 0, 0));\nbuilder.AddElement(textElement);\nbuilder.Build("Output.pdf");\n'})}),"\n",(0,n.jsxs)(t.p,{children:["In this example, a ",(0,n.jsx)(t.code,{children:"TomoText"}),' element is created with the text "Hello, PDF World!" positioned at (100, 150) with a text size of 18 and red color. The text element is then added to the PDF builder, and the document is saved as "Output.pdf".']})]})}function h(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(d,{...e})}):d(e)}},8453:(e,t,o)=>{o.d(t,{R:()=>l,x:()=>r});var n=o(6540);const i={},s=n.createContext(i);function l(e){const t=n.useContext(s);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function r(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:l(e.components),n.createElement(s.Provider,{value:t},e.children)}}}]);